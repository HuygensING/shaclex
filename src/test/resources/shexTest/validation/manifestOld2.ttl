# -*- mode: n3; outline-regexp: "[#]+ "; -*-
# handy bits from outline mode:
#   C-c @ C-l	hide-leaves - on prefixes, entries, definitions
#   C-c @ C-s	show-subtree - on anything you're hacking
#  Note that incremental search opens leaves for the duration of the search.

# prefixes
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sht:     <http://www.w3.org/ns/shacl/test-suite#> .
@prefix prov:   <http://www.w3.org/ns/prov#> .

 # TODO:
 #   repeated OR
 #   1dotRefOR3 on..


# entries
<> a mf:Manifest ;
    rdfs:comment "ShEx validation tests" ;
    mf:entries
    (
## empty
        <#0_empty>
        <#0_other>
    ) .

# definitions
## empty {

<#0_empty> a sht:ValidationTest ;
    mf:name "0_empty" ;
    sht:trait sht:Empty ;
    rdfs:comment "<S1> {  } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/dummy>
    ] ;
    mf:result <0_dummy.val>
    .

<#0_other> a sht:ValidationTest ;
    mf:name "0_other" ;
    sht:trait sht:Empty ;
    rdfs:comment "<S1> {  } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <0_pass.val>
    .

